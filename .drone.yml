# dapp generic-oracle-dapp default pipeline
kind: pipeline
type: docker
name: default

trigger:
  event:
    exclude:
      - promote

steps:
  - name: install
    image: node:14-alpine3.11
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check version match [get scone fingerprint (prod)]
    image: node:18
    commands:
      - cat .drone.yml | grep "iexechub/generic-oracle-dapp:$(npm pkg get version | sed 's/"//g')-sconify-"

  - name: format
    image: node:14-alpine3.11
    commands:
      - npm run check-format

  - name: unit-test
    image: node:14-alpine3.11
    commands:
      - cp config.prod.json src/config.json
      - npm run test

  - name: docker-publish-dry-run
    # plugin doc https://plugins.drone.io/plugins/docker and repo https://github.com/drone-plugins/drone-docker
    image: plugins/docker
    pull: always
    settings:
      dry_run: true
      dockerfile: ./docker/Dockerfile
      registry: docker-regis.iex.ec
      repo: docker-regis.iex.ec/product/generic-oracle-dapp
      pull_image: true
      username:
        from_secret: nexus-user
      password:
        from_secret: nexus-password
      build_args:
        - CONFIG_FILE=config.prod.json

---
# dapp generic-oracle-dapp publish docker dev non-tee pipeline
kind: pipeline
type: docker
name: dapp-dev-non-tee

trigger:
  event:
    - promote
  target:
    - dapp-dev-non-tee
  branch:
    - develop

steps:
  - name: install
    image: node:14-alpine3.11
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:14-alpine3.11
    commands:
      - npm run check-format

  - name: test
    image: node:14-alpine3.11
    commands:
      - cp config.prod.json src/config.json
      - npm run test

  - name: docker-publish-dev-non-tee
    # plugin doc https://plugins.drone.io/plugins/docker and repo https://github.com/drone-plugins/drone-docker
    image: plugins/docker
    pull: always
    settings:
      dockerfile: ./docker/Dockerfile
      registry: docker-regis.iex.ec
      repo: docker-regis.iex.ec/product/generic-oracle-dapp
      pull_image: true
      username:
        from_secret: nexus-user
      password:
        from_secret: nexus-password
      tags:
        - dev
        - "dev-${DRONE_COMMIT}"
      build_args:
        - CONFIG_FILE=config.dev.json

---
# dapp generic-oracle-dapp publish docker prod non-tee pipeline
kind: pipeline
type: docker
name: dapp-prod-non-tee

trigger:
  event:
    - promote
  target:
    - dapp-prod-non-tee
  branch:
    - main

steps:
  - name: install
    image: node:14-alpine3.11
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:14-alpine3.11
    commands:
      - npm run check-format

  - name: test
    image: node:14-alpine3.11
    commands:
      - cp config.prod.json src/config.json
      - npm run test

  - name: extract-version-from-package
    image: node:18
    # generates the .tags file for the docker plugin
    commands:
      - npm pkg get version | sed 's/"//g' > .tags

  - name: docker-publish-prod-non-tee
    # plugin doc https://plugins.drone.io/plugins/docker and repo https://github.com/drone-plugins/drone-docker
    image: plugins/docker
    pull: always
    settings:
      dockerfile: ./docker/Dockerfile
      # tag comes from .tags file
      registry: docker-regis.iex.ec
      repo: docker-regis.iex.ec/product/generic-oracle-dapp
      pull_image: true
      username:
        from_secret: nexus-user
      password:
        from_secret: nexus-password
      build_args:
        - CONFIG_FILE=config.prod.json

---
#pipeline to publish dapp contract on iexec
kind: pipeline
type: docker
name: deploy-dapp-contract

trigger:
  event:
    - promote
  target:
    - dapp-dev
    - dapp-prod
  branch:
    - develop
    - main

steps:
  - name: get scone fingerprint (dev)
    image: iexechub/generic-oracle-dapp:dev-${DRONE_COMMIT}-sconify-5.7.5-v9-production
    commands:
      - SCONE_HASH=1 node > deployment-dapp/.scone-fingerprint
    when:
      target:
        - dapp-dev
      branch:
        - develop

  - name: get scone fingerprint (prod)
    # /!\: maintain the version here
    image: iexechub/generic-oracle-dapp:2.0.1-sconify-5.7.5-v9-production
    commands:
      - SCONE_HASH=1 node > deployment-dapp/.scone-fingerprint
    when:
      target:
        - dapp-prod
      branch:
        - main

  - name: install deps
    image: node:18
    pull: always
    commands:
      - cd deployment-dapp
      - npm ci

  - name: deploy dapp contract
    image: node:18
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
    commands:
      - cd deployment-dapp
      - npm run deploy-dapp

  - name: push dapp secret
    image: node:18
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
      REPORTER_DEV_PRIVATE_KEY:
        from_secret: oracle-factory-reporter-dev-privatekey
      REPORTER_PROD_PRIVATE_KEY:
        from_secret: oracle-factory-reporter-prod-privatekey
    commands:
      - cd deployment-dapp
      - npm run push-dapp-secret

  - name: publish free sell order
    image: node:18
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
      PRICE: "0"
      VOLUME: "1000000000"
    commands:
      - cd deployment-dapp
      - npm run publish-sell-order

  - name: configure ENS
    image: node:18
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
    commands:
      - cd deployment-dapp
      - npm run configure-ens

---
# pipeline to publish sell order
kind: pipeline
type: docker
name: publish-apporder

trigger:
  event:
    - promote
  target:
    - dapp-publish-sell-order-dev
    - dapp-publish-sell-order-prod
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18
    pull: always
    commands:
      - cd deployment-dapp
      - npm ci

  - name: publish sell order
    image: node:18
    pull: always
    params:
      - PRICE
      - VOLUME
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
    commands:
      - cd deployment-dapp
      - npm run publish-sell-order

---
# pipeline to revoke sell order
kind: pipeline
type: docker
name: revoke-apporder

trigger:
  event:
    - promote
  target:
    - dapp-revoke-sell-order-dev
    - dapp-revoke-sell-order-prod
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18
    pull: always
    commands:
      - cd deployment-dapp
      - npm ci

  - name: revoke sell order
    image: node:18
    pull: always
    params:
      - ORDER_HASH
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
    commands:
      - cd deployment-dapp
      - npm run revoke-sell-order

---
# pipeline to push app secret
kind: pipeline
type: docker
name: push-app-secret

trigger:
  event:
    - promote
  target:
    - dapp-push-secret-dev
    - dapp-push-secret-prod
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18
    pull: always
    commands:
      - cd deployment-dapp
      - npm ci

  - name: push dapp secret
    image: node:18
    pull: always
    environment:
      DRONE_DEPLOY_TO: $DRONE_DEPLOY_TO
      WALLET_PRIVATE_KEY_DEV:
        from_secret: oracle-factory-dapp-owner-dev-privatekey
      WALLET_PRIVATE_KEY_PROD:
        from_secret: oracle-factory-dapp-owner-prod-privatekey
      REPORTER_DEV_PRIVATE_KEY:
        from_secret: oracle-factory-reporter-dev-privatekey
      REPORTER_PROD_PRIVATE_KEY:
        from_secret: oracle-factory-reporter-prod-privatekey
    commands:
      - cd deployment-dapp
      - npm run push-dapp-secret
